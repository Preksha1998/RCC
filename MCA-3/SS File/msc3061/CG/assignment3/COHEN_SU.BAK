#include<stdio.h>
#include<conio.h>
#include<math.h>
#include<graphics.h>
#define lb 1
#define rb 2
#define bb 4
#define tb 8
#define inside(a) (!a)
#define round(a) ((int)(a+0.5))
float xwmin=160,xwmax=480,ywmin=80,ywmax=400,x1=50,y1=150,x2=400,y2=300
//float xwmin,xwmax,ywmin,ywmax;
//float x1,y1,x2,y2;
float m;
int code1=0000,code2=0000,done=0,draw=0;
int ans;
void gentle(int xa,int ya,int xb,int yb){
	int dx,dy,x,y,xend;
	int p,twody,twodydx;
	float m;
	dx=abs(xa-xb);
	dy=abs(ya-yb);
	if(dx==0){
		m=(float)(dy);
	}
	else{
		m=((float)dy/(float)dx);
	}
	p=2*dy-dx;
	twody=2*dy;
	twodydx=2*(dy-dx);
	if(xa>xb){
		x=xb;
		y=yb;
		xend=xa;
	}
	else{
		x=xa;
		y=ya;
		xend=xb;
	}
	putpixel(x,y,1);
	while(x<xend){
		x++;
		if(p<0){
			p=p+twody;
		}
		else{
			if(m>0 && m<1){
				y++;
			}
			else if(m<0 && m>-1){
				y--;
			}
			p=p+twodydx;

		}
		putpixel(x,y,1);
	}

}
void steep(int xa,int ya,int xb,int yb){
	int dx,dy,x,y,yend;
	int p,twodx,twodxdy;
	float m;
	dx=abs(xa-xb);
	dy=abs(ya-yb);
	if(dx==0){
		m=(float)(dy);
	}
	else{
		m=((float)(yb-ya)/(float)(xb-xa));
	}
	p=2*dx-dy;
	twodx=2*dx;
	twodxdy=2*(dx-dy);
	if(ya>yb){
		x=xb;
		y=yb;
		yend=ya;
	}
	else{
		x=xa;
		y=ya;
		yend=yb;
	}
	putpixel(x,y,1);
	while(y<yend){
		y++;
		if(p<0){
			p=p+twodx;
		}
		else{
			if(m>=1){
				x++;
			}
			else if(m<=-1){
				x--;
			}
			p=p+twodxdy;

		}
		putpixel(x,y,1);
	}

}
void breshenham(int xa,int ya,int xb,int yb){

	int dx,dy;
	dx=abs(xa-xb);
	dy=abs(ya-yb);
	if(dx>dy)
	{
		gentle(xa,ya,xb,yb);
	}
	else
	{
		steep(xa,ya,xb,yb);
	}
}
int encode(float x,float y){

	int code=0000;
	if(x<xwmin){
		code=code|lb;
	}
	if(x>xwmax){
		code=code|rb;
	}
	if(y<ywmin){
		code=code|bb;
	}
	if(y>ywmax){
		code=code|tb;
	}
	return code;
}
int accept(){
	if((code1|code2)==0){
		ans=1;
	}
	else{
		ans=0;
	}
	return ans;
}
int reject(){
	if((code1&code2)!=0){
		ans=1;
	}
	else{
		ans=0;
	}
	return ans;
}

void swappts(float x1,float y1,float x2,float y2){
	float t=x1;
	x1=x2;
	x2=t;
	t=y1;
	y1=y2;
	y2=t;
}
void swapcodes(){
	int t=code1;
	code1=code2;
	code2=t;
}
void clipline(){

	while(done==0){
		code1=encode(x1,y1);
		code2=encode(x2,y2);
	   //	ans=accept();
		if(accept()){
			done=1;
			draw=1;
		}
		else if(reject()){
			done=1;
		}
	     /*	if(ans==1){
			done=1;
		}*/
		else{
			if(inside(code1)){
				swappts(x1,y1,x2,y2);
				swapcodes(code1,code2);
			}
			if(x1!=x2){
				m=(y2-y1)/(x2-x1);
			}
				if(code1&lb){
					y1=y1+(xwmin-x1)*m;
					x1=xwmin;
				}
				else if(code1&rb){
					y1=y1+(xwmax-x1)*m;
					x1=xwmax;
				}
				else if(code1&bb){
					x1=x1+m*(ywmin-y1)/m;
					y1=ywmin;
				}
				else if(code1&tb){
					y1=y1+m*(ywmax-y1)/m;
					y1=ywmax;
				}
			}
		}
		if(draw==1){
			breshenham(round(x1),round(y1),round(x2),round(y2));
		}

}
void main(){
	int gd=DETECT,gm;
	initgraph(&gd,&gm,"c:/tc/bgi");
       /*	printf("\nENTER CO-ORDINATES FOR TOP-LEFT CORNER OF WINDOW::");
	scanf("%f %f",&xwmin,&ywmin);
	printf("\nENTER CO-ORDINATES FOR BOTTOM-RIGHT CORNER OF WINDOW::");
	scanf("%f %f",&xwmax,&ywmax);
	printf("\nENTER VALUES FOR CO-ORDINATES::");
	scanf("%f %f %f %f",&x1,&y1,&x2,&y2);*/
	setcolor(GREEN);
	rectangle(xwmin,ywmax,xwmax,ywmin);
	breshenham(x1,y1,x2,y2);
	printf("\n press enter::");
	getch();
	cleardevice();
	setcolor(GREEN);
	rectangle(xwmin,ywmax,xwmax,ywmin);
	clipline();
	getch();

}
//xwmin=160,xwmax=480,ywmin=80,ywmax=400,x1=50,y1=150,x2=400,y2=300
