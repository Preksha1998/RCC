************************************************************************************************************************************
NAME    : Preksha Sheth
ROLL NO : 36
CLASS   : MCA-III
SUBJECT : DATA STRUCTURE(DS)
*****************************************************************************************************************************************
Q(1): linear Search..
*****************************************************************************************************************************************
#include<stdio.h>
#include<conio.h>

void lin_search(int arr[100],int n)
{
	int i,count = 0 ,search;
	printf("Enter which element you want to find :");
	scanf("%d",&search);
	for(i = 0; i < n; i++)
	{
		if(arr[i] == search)
		{
			printf("\n%d is located at position %d..",search,i+1);
			count++;
		}
	}	
	
	if(count == 0)
	{
		printf("\n%d is not present in the list..",search);
	}
	else
	{
		printf("\n%d is present %d times in the array..",search,count);
	}
}


void main()
{
	int arr[100], i,n;
	printf("Enter How many element you want : ");
	scanf("%d",&n);
	
	for(i = 0; i < n; i++)
	{
		printf("Enter Number %d = ",i+1);
		scanf("%d",&arr[i]);
	}
	
	for(i = 0; i < n; i++)
	{
		printf("Number %d = %d\n",i+1,arr[i]);
		
	}
	
	lin_search(arr,n);
}
*****************************************************************************************************************************************
OUTPUT:

Enter How many element you want : 7
Enter Number 1 = 1
Enter Number 2 = 66
Enter Number 3 = 44
Enter Number 4 = 12
Enter Number 5 = 44
Enter Number 6 = 12
Enter Number 7 = 5
Number 1 = 1
Number 2 = 66
Number 3 = 44
Number 4 = 12
Number 5 = 44
Number 6 = 12
Number 7 = 5
Enter which element you want to find :12

12 is located at position 4..
12 is located at position 6..
12 is present 2 times in the array..
--------------------------------
Process exited after 19.05 seconds with return value 37
Press any key to continue . . .
*****************************************************************************************************************************************
Q(2): Binary Search..
*****************************************************************************************************************************************
#include<stdio.h>
#include<conio.h>

void binary_search(int arr[],int n)
{
	int first = 0, last = n-1,search;
	int mid = (first + last) / 2;
	printf("Enter Element you want to search :");
	scanf("%d",&search);
	while(first <= last)
	{
		if(arr[mid] == search)
		{
			printf("\n%d is found at location %d..",search,mid + 1);
			break;
		}
		else if(arr[mid] < search)
		{
			first = mid + 1;	
		}
		else
		{
			last = mid - 1;
		}
		mid = (first + last) / 2;	
	}
	if(first > last)
	{
		printf("\nArray is not sorted..");
	}
}
void main()
{
	int arr[100], i,n;
	printf("Enter How many element you want : ");
	scanf("%d",&n);
	
	for(i = 0; i < n; i++)
	{
		printf("Enter Number %d = ",i+1);
		scanf("%d",&arr[i]);
	}
	
	for(i = 0; i < n; i++)
	{
		printf("Number %d = %d\n",i+1,arr[i]);
		
	}
	
	binary_search(arr,n);
}
*****************************************************************************************************************************************
OUTPUT:

Enter How many element you want : 7
Enter Number 1 = 11
Enter Number 2 = 14
Enter Number 3 = 25
Enter Number 4 = 39
Enter Number 5 = 40
Enter Number 6 = 50
Enter Number 7 = 70
Number 1 = 11
Number 2 = 14
Number 3 = 25
Number 4 = 39
Number 5 = 40
Number 6 = 50
Number 7 = 70
Enter Element you want to search :14

14 is found at location 2..
--------------------------------
Process exited after 33.09 seconds with return value 0
Press any key to continue . . .
*****************************************************************************************************************************************
Q(3): Bubble Sort..
*****************************************************************************************************************************************
#include<stdio.h>
#include<conio.h>

int bubble_sort(int arr[],int n)
{
	int i,temp,j;
	for(i = 0; i < n-1; i++)
	{
		for(j = 0; j < n-i-1; j++)	
		{
			if(arr[j] > arr[j+1])
			{
				temp = arr[j];
				arr[j] = arr[j+1];
				arr[j+1] = temp;
			}
		}
	}	
		
	printf("\n\n\t\t*** SORTED ARRAY ***");
	for(i = 0; i < n ; i++)
	{
		printf("\n%d",arr[i]);
	}
}

void main()
{
	int arr[100],i,n;
	printf("Enter How Many element you want : ");
	scanf("%d",&n);
	for(i = 0; i < n; i++)
	{
		printf("Enter Number %d = ",i+1);
		scanf("%d",&arr[i]);
	}
	
	for(i = 0; i < n; i++)
	{
		printf("Number %d = %d\n",i+1,arr[i]);
		
	}
 	 bubble_sort(arr,n);
}
*****************************************************************************************************************************************
OUTPUT:

Enter How Many element you want : 7
Enter Number 1 = 5
Enter Number 2 = 1
Enter Number 3 = 9
Enter Number 4 = 35
Enter Number 5 = 12
Enter Number 6 = 66
Enter Number 7 = 50
Number 1 = 5
Number 2 = 1
Number 3 = 9
Number 4 = 35
Number 5 = 12
Number 6 = 66
Number 7 = 50


                *** SORTED ARRAY ***
1
5
9
12
35
50
66
--------------------------------
Process exited after 19.85 seconds with return value 7
Press any key to continue . . .
*****************************************************************************************************************************************

*****************************************************************************************************************************************